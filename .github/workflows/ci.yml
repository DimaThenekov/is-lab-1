name: CI/CD Pipeline with Security Scanning

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  security-scanning:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run npm audit for vulnerability scanning
      run: npm audit --audit-level=high

    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'test'
        path: '.'
        format: 'HTML'
        out: 'reports'

    - name: Upload Test results
      uses: actions/upload-artifact@master
      with:
         name: Depcheck report
         path: ${{github.workspace}}/reports${{ matrix.node-version }}
         overwrite: true

    - name: Run ESLint security analysis
      run: npx eslint . --config .eslintrc.json --ext .js --format json --output-file eslint-report.json || true

    - name: Upload ESLint report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: eslint-report
        path: eslint-report.json

  test-api:
    runs-on: ubuntu-latest
    needs: security-scanning
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Start server and run tests
      run: |
        npm start &
        sleep 5
        npm test